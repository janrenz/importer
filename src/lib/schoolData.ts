import schoolListData from '../../ASD2024_Schulliste.json';

export interface SchoolInfo {
  Schulnummer: number;
  Kurzbezeichnung: string;
  Schulform: string;
  Rechtsstatus: string;
}

export const schoolList: SchoolInfo[] = schoolListData;

export function findSchoolByNumber(schulnummer: string | number): SchoolInfo | null {
  const schoolNumber = typeof schulnummer === 'string' ? parseInt(schulnummer) : schulnummer;
  
  if (isNaN(schoolNumber)) {
    return null;
  }
  
  return schoolList.find(school => school.Schulnummer === schoolNumber) || null;
}

export function getSchulformColor(schulform: string): string {
  switch (schulform.toLowerCase()) {
    case 'grundschule':
      return 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-300';
    case 'gymnasium':
      return 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-300';
    case 'gesamtschule':
      return 'bg-purple-100 text-purple-800 dark:bg-purple-900/20 dark:text-purple-300';
    case 'realschule':
      return 'bg-orange-100 text-orange-800 dark:bg-orange-900/20 dark:text-orange-300';
    case 'hauptschule':
      return 'bg-amber-100 text-amber-800 dark:bg-amber-900/20 dark:text-amber-300';
    case 'förderschule':
      return 'bg-pink-100 text-pink-800 dark:bg-pink-900/20 dark:text-pink-300';
    case 'berufskolleg':
      return 'bg-indigo-100 text-indigo-800 dark:bg-indigo-900/20 dark:text-indigo-300';
    case 'weiterbildungskolleg':
      return 'bg-teal-100 text-teal-800 dark:bg-teal-900/20 dark:text-teal-300';
    default:
      return 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-300';
  }
}

export function getRechtstatusColor(rechtsstatus: string): string {
  switch (rechtsstatus.toLowerCase()) {
    case 'öffentlich':
      return 'bg-emerald-100 text-emerald-800 dark:bg-emerald-900/20 dark:text-emerald-300';
    case 'privat':
      return 'bg-rose-100 text-rose-800 dark:bg-rose-900/20 dark:text-rose-300';
    default:
      return 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-300';
  }
}

export function isPublicSchool(schulnummer: string | number): boolean {
  const schoolInfo = findSchoolByNumber(schulnummer);
  // If school not found in lookup, consider it private (no ID requirements)
  if (!schoolInfo) {
    return false;
  }
  return schoolInfo.Rechtsstatus.toLowerCase() === 'öffentlich';
}

export function requiresTeacherID(schulnummer: string | number): boolean {
  return isPublicSchool(schulnummer);
}

export function isAutoGeneratedID(schildId: string): boolean {
  // Auto-generated IDs have the format "ID-XXXXXX-XXXX" 
  return schildId.startsWith('ID-') && /^ID-\d{6}-\d{4}$/.test(schildId);
}

export function isValidSchILDID(schildId: string | undefined, schulnummer: string | number): boolean {
  // If no ID provided, it's invalid
  if (!schildId || schildId.trim() === '') {
    return false;
  }
  
  // If school requires teacher ID (public school)
  if (requiresTeacherID(schulnummer)) {
    // Auto-generated IDs are not valid for public schools
    return !isAutoGeneratedID(schildId.trim());
  }
  
  // For private schools, any ID (including auto-generated) is valid
  return true;
}